services:
  # vmemo:
  #   image: node:20
  #   container_name: vmemo
  #   working_dir: /vmemo
  #   volumes:
  #     - ./:/vmemo
  #     - /vmemo/node_modules
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     - JWT_SECRET=${JWT_SECRET}
  #     - NEXT_PUBLIC_API=${NEXT_PUBLIC_API}
  #     - NEXT_PUBLIC_YUDAO_APPKEY=${NEXT_PUBLIC_YUDAO_APPKEY}
  #     - NEXT_PUBLIC_YUDAO_KEY=${NEXT_PUBLIC_YUDAO_KEY}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PRISMA_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  #     - POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  #     - POSTGRES_URL_NON_POOLING=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  #     - CRON_SECRET=${CRON_SECRET}
  #     - BAIDU_AK=${BAIDU_AK}
  #     - BAIDU_SK=${BAIDU_SK}
  #     - AUTH_SECRET=${AUTH_SECRET}
  #     - NEXTAUTH_URL=${NEXTAUTH_URL}
  #     - AUTH_GITHUB_ID=${AUTH_GITHUB_ID}
  #     - AUTH_GITHUB_SECRET=${AUTH_GITHUB_SECRET}
  #     - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
  #     - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
  #     - AUTH_TWITTER_ID=${AUTH_TWITTER_ID}
  #     - AUTH_TWITTER_SECRET=${AUTH_TWITTER_SECRET}
  #     - AUTH_DISCORD_ID=${AUTH_DISCORD_ID}
  #     - AUTH_DISCORD_SECRET=${AUTH_DISCORD_SECRET}
  #   command: sh -c "corepack enable && corepack prepare pnpm@9.14.4 --activate && pnpm install --frozen-lockfile && pnpm prisma migrate deploy && pnpm prisma generate && pnpm run dev"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  postgres:
    image: postgres:15
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db:
